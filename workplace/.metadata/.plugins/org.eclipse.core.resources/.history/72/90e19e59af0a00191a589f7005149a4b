package edu.whut.cs.oo;

import edu.whut.cs.oo.domain.Administrator;
import edu.whut.cs.oo.domain.Archive;
import edu.whut.cs.oo.domain.Browser;
import edu.whut.cs.oo.domain.Document;
import edu.whut.cs.oo.domain.Operator;
import edu.whut.cs.oo.domain.SecurityClassfication;
import edu.whut.cs.oo.domain.User;
import edu.whut.cs.oo.service.ArchiveService;
import edu.whut.cs.oo.service.DocumentService;
import edu.whut.cs.oo.service.UserService;
import edu.whut.cs.oo.service.impl.ArchiveServiceClient;
import edu.whut.cs.oo.service.impl.DocumentServiceClient;
import edu.whut.cs.oo.service.impl.UserServiceClient;
/**
 * @author zzx
 *
 */
public class Application {
	
	public static User currentUser;
	public static UserService userService;
	public static DocumentService documentService;
	public static ArchiveService archiveService;
	
	static {
//		UserDao userDao = new UserDaoContainerFile();
//		UserDao userDao = new UserDaoContainerFile();
		userService = new UserServiceClient();
//		userService.setUserDao(userDao);
		
////		DocumentDao documentDao = new DocumentDaoContainerFile();
//		DocumentDao documentDao = new DocumentDaoContainerFile();
		documentService = new DocumentServiceClient();
//		documentService.setDocumentDao(documentDao);
		
//		DocumentDao documentDao = new DocumentDaoContainerFile();
//		ArchiveDao archiveDao = new ArchiveDaoContainerFile();
		archiveService = new ArchiveServiceClient();
//		archiveService.setArchiveDao(archiveDao);
		
//		try {
//			if (userService.getAllUsers().size() == 0) {
//				userService.clear();
//				createUsers();
//			}
//			if (documentService.getAllDocuments().size() == 0) {
//				documentService.clear();
//				createDocuments();
//			}
//			if(archiveService.getAllArchives().size()==0) {
//				archiveService.clear();
//				createArchives();
//			}
//			
//		} catch (Exception e) {
//			e.printStackTrace();
//		}
//		
	}

	public static void main(String[] args) throws Exception {
		System.out.println("请运行Application的子类");
	}
	
	protected static void createUsers() throws Exception {
		Administrator administrator = new Administrator();
		administrator.setName("Kate");
		administrator.setPassword("123");
		userService.createUser(administrator);
		
		Operator operator = new Operator();
		operator.setName("Jack");
		operator.setPassword("123");
		userService.createUser(operator);
		
		Browser browser = new Browser();
		browser.setName("Rose");
		browser.setPassword("123");
		userService.createUser(browser);
	}
	
	protected static void createDocuments() throws Exception {
		Document document = new Document();
		document.setSn("D001");
		document.setName("第一个档案");
		document.setDescription("这是一份很重要的档案");
		document.setUser(userService.getUser("Jack"));	
		document.setAbsolutePath("e:\\OOP\\uploadfile\\User.java");
		documentService.createDocument(document);
	}
	protected static void createArchives() throws Exception {
		Archive archive = new Archive();
		archive.setId(1);
		archive.setTitle("第一个案宗");
		archive.setKeyword("这是一份很重要的案宗");
		archive.setFileName("abc.bin");
		archive.setSecurityClassfication(SecurityClassfication.D);
		archive.setUser(userService.getUser("Jack"));	
		archive.setAbsolutePath("e:\\OOP\\uploadfile\\User.java");
		archiveService.updateArchive(archive);
	}
}
