//package edu.whut.cs.oo.frame;
//
//import java.awt.BorderLayout;
//import java.awt.Dimension;
//import java.awt.Toolkit;
//import java.awt.event.ActionEvent;
//import java.awt.event.ActionListener;
//
//import javax.swing.JMenu;
//import javax.swing.JMenuBar;
//import javax.swing.JMenuItem;
//import javax.swing.JPanel;
//import javax.swing.WindowConstants;
//
//import edu.whut.cs.oo.domain.Administrator;
//import edu.whut.cs.oo.domain.Operator;
//
//public class MainFrame extends BaseFrame {	
//	private JPanel panel; 
//	private JMenuBar menuBar;
//	private JMenu menuUser,menuFile,menuSelf,menuArchive;
//	private JMenuItem menuItem_modUser,menuItem_delUser,menuItem_addUser,
//					  menuItem_listDoc,menuItem_upDoc,menuItem_downDoc,
//					  menuItem_querySelf,menuItem_modSelf,
//					  menuArchive_List,
//				      menuArchive_up,menuArchive_down,menuArchive_amend,
//					  menuArchive_delete,menuArchive_search;
//	
//	private UserFrame userframe=null;
//	private SelfFrame selfframe=null;
//	private FileFrame fileframe=null;
//	private ArchiveFrame archiveframe=null;
//	
//	public MainFrame(){
//				
//		initFrame();
//		menuBar = new JMenuBar();
//		setJMenuBar(menuBar);
//		
//		menuUser = new JMenu("用户管理");
//		menuBar.add(menuUser);
//		
//		menuItem_modUser = new JMenuItem("修改用户");
//		menuItem_modUser.addActionListener(new ActionListener() {
//			public void actionPerformed(ActionEvent e) {
//				menuItem_modUserActionPerformed(e);
//			}
//		});	
//		menuUser.add(menuItem_modUser);
//		
//		menuItem_delUser = new JMenuItem("删除用户");
//		menuItem_delUser.addActionListener(new ActionListener() {
//			public void actionPerformed(ActionEvent e) {
//				menuItem_delUserActionPerformed(e);
//			}
//		});
//		menuUser.add(menuItem_delUser);
//		
//		menuItem_addUser = new JMenuItem("新增用户");
//		menuItem_addUser.addActionListener(new ActionListener() {
//			public void actionPerformed(ActionEvent e) {
//				menuItem_addUserActionPerformed(e);
//			}
//		});
//		menuUser.add(menuItem_addUser);
//		
//		menuFile = new JMenu("档案管理");
//		menuBar.add(menuFile);
//		
//		menuItem_upDoc = new JMenuItem("档案上传");
//		menuItem_upDoc.addActionListener(new ActionListener() {
//			public void actionPerformed(ActionEvent e) {
//				menuItem_upDocActionPerformed(e);
//			}
//		});
//		menuFile.add(menuItem_upDoc);	
//		
//		menuItem_downDoc = new JMenuItem("档案下载");
//		menuItem_downDoc.addActionListener(new ActionListener() {
//			public void actionPerformed(ActionEvent e) {
//				menuItem_downDocActionPerformed(e);
//			}
//		});
//		menuFile.add(menuItem_downDoc);
//		
//		menuSelf = new JMenu("个人信息管理");
//		menuBar.add(menuSelf);
//		
//		menuItem_modSelf = new JMenuItem("信息修改");
//		menuItem_modSelf.addActionListener(new ActionListener() {
//			public void actionPerformed(ActionEvent e) {
//				menuItem_modSelfActionPerformed(e);
//			}
//		});
//		menuSelf.add(menuItem_modSelf);	
//
//		
//				
//		menuArchive = new JMenu("案宗管理");
//		menuBar.add(menuArchive);
//		menuArchive_List = new JMenuItem("列出所有案宗");
//		menuArchive_List.addActionListener(new ActionListener() {
//			public void actionPerformed(ActionEvent e) {
//				menuArchive_ListActionPerformed(e);
//			}
//
//			private void menuArchive_ListActionPerformed(ActionEvent e) {
//				// TODO Auto-generated method stub
//				if (archiveframe==null){
//					archiveframe= new ArchiveFrame();
//				}
//				archiveframe.setTabSeq(0);
//				archiveframe.setVisible(true);
//			}
//		});
//		menuArchive.add(menuArchive_List);
//		menuArchive_up = new JMenuItem("上传案宗");
//		menuArchive_up.addActionListener(new ActionListener() {
//			public void actionPerformed(ActionEvent e) {
//				menuArchive_upActionPerformed(e);
//			}
//
//			private void menuArchive_upActionPerformed(ActionEvent e) {
//				// TODO Auto-generated method stub
//				if (archiveframe==null){
//					archiveframe= new ArchiveFrame();
//				}
//				archiveframe.setTabSeq(1);
//				archiveframe.setVisible(true);
//			}
//		});
//		menuArchive.add(menuArchive_up);
//		menuArchive_down = new JMenuItem("下载案宗文件");
//		menuArchive_down.addActionListener(new ActionListener() {
//			public void actionPerformed(ActionEvent e) {
//				menuArchive_downActionPerformed(e);
//			}
//
//			private void menuArchive_downActionPerformed(ActionEvent e) {
//				// TODO Auto-generated method stub
//				if (archiveframe==null){
//					archiveframe= new ArchiveFrame();
//				}
//				archiveframe.setTabSeq(2);
//				archiveframe.setVisible(true);
//			}
//		});
//		menuArchive.add(menuArchive_down);
//		menuArchive_amend = new JMenuItem("修改案宗信息");
//		menuArchive_amend.addActionListener(new ActionListener() {
//			public void actionPerformed(ActionEvent e) {
//				menuArchive_amendfActionPerformed(e);
//			}
//
//			private void menuArchive_amendfActionPerformed(ActionEvent e) {
//				// TODO Auto-generated method stub
//				if (archiveframe==null){
//					archiveframe= new ArchiveFrame();
//				}
//				archiveframe.setTabSeq(3);
//				archiveframe.setVisible(true);
//			}
//			
//		});
//		menuArchive.add(menuArchive_amend);
//		menuArchive_delete = new JMenuItem("删除案宗");
//		menuArchive_delete.addActionListener(new ActionListener() {
//			public void actionPerformed(ActionEvent e) {
//				menuArchive_deleterActionPerformed(e);
//			}
//
//			private void menuArchive_deleterActionPerformed(ActionEvent e) {
//				// TODO Auto-generated method stub
//				if (archiveframe==null){
//					archiveframe= new ArchiveFrame();
//				}
//				archiveframe.setTabSeq(4);
//				archiveframe.setVisible(true);
//			
//			}
//		});
//		menuArchive.add(menuArchive_delete);
//
//		menuArchive_search = new JMenuItem("按标题查找案宗");
//		menuArchive_search.addActionListener(new ActionListener() {
//			public void actionPerformed(ActionEvent e) {
//				menuArchive_searchActionPerformed(e);
//			}
//
//			private void menuArchive_searchActionPerformed(ActionEvent e) {
//				// TODO Auto-generated method stub
//				if (archiveframe==null){
//					archiveframe= new ArchiveFrame();
//				}			
//				archiveframe.setTabSeq(5);
//				archiveframe.setVisible(true);	
//			}
//		});
//		
//		menuArchive.add(menuArchive_search);
//		
//		setFrameByRole();
////		setVisible(true);
//	}
//	
//
//
//	private void initFrame() {
//		
//		Toolkit toolkit = getToolkit();                    // 获得Toolkit对象
//		Dimension dimension = toolkit.getScreenSize();     // 获得Dimension对象
//		int screenHeight = dimension.height;               // 获得屏幕的高度
//		int screenWidth = dimension.width;                 // 获得屏幕的宽度
//		this.setSize(screenWidth, screenHeight);           // 获得窗体的高度
//		
//		this.setLocation(0,0); 
//		
//		setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
////		setResizable(false);
//				
//		panel = new JPanel();
//		getContentPane().add(panel, BorderLayout.CENTER);
//		panel.setLayout(null);
//	}
//	
//	private void setFrameByRole() {
//		if (currentUser instanceof Administrator) {
//			setAdminFrame();
//		} else if (currentUser instanceof Operator) {
//			setOperatorFrame();
//		} else {
//			setBrowserFrame();
//		}
//	}
//	
//	public void setAdminFrame(){
//		setTitle("系统管理员界面");	
//		menuItem_upDoc.setEnabled(false);
//	}
//	
//	public void setOperatorFrame(){
//		setTitle("档案录入员界面");
//		menuUser.setEnabled(false);		
//	}
//	
//	public void setBrowserFrame(){
//		setTitle("档案浏览员界面");
//		menuUser.setEnabled(false);
//		menuItem_upDoc.setEnabled(false);
//	}
//	
//	public static void launch() {
//		java.awt.EventQueue.invokeLater(new Runnable() {
//			public void run() {
//				new MainFrame().setVisible(true);
//			}
//		});
//	}
//	
//	private void menuItem_modUserActionPerformed(ActionEvent e){
//		if (userframe==null){
//			userframe= new UserFrame();
//		}
//		userframe.setTabSeq(1);
//		userframe.setVisible(true);
//
//	}
//	
//	private void menuItem_delUserActionPerformed(ActionEvent e){
//		if (userframe==null){
//			userframe= new UserFrame();
//		}			
//		userframe.setTabSeq(2);
//		userframe.setVisible(true);		
//	}
//	
//	private void menuItem_addUserActionPerformed(ActionEvent e){
//		if (userframe==null){
//			userframe= new UserFrame();
//		}			
//		userframe.setTabSeq(0);
//		userframe.setVisible(true);	
//	}
//	
//	private void menuItem_upDocActionPerformed(ActionEvent e){
//		if (fileframe==null){
//			fileframe= new FileFrame();
//		}
//		fileframe.setTabSeq(1);
//		fileframe.setVisible(true);
//		
//	}
//	
//	private void menuItem_downDocActionPerformed(ActionEvent e){
//		if (fileframe==null){
//			fileframe= new FileFrame();
//		}
//		fileframe.setTabSeq(0);
//		fileframe.setVisible(true);
//	}
//
//	private void menuItem_modSelfActionPerformed(ActionEvent e){
//		if (selfframe==null){
//			selfframe= new SelfFrame();
//		}		
//		selfframe.setVisible(true);
//	}
//	
//		
//	public static void main(String[] args) {
//		// TODO Auto-generated method stub
//
//	}
//
//}
package edu.whut.cs.oo.frame;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.WindowConstants;

import edu.whut.cs.oo.domain.Administrator;
import edu.whut.cs.oo.domain.Operator;

public class MainFrame extends BaseFrame {	
	/**
	 * 
	 */
	private static final long serialVersionUID = 6522697125717423804L;
	private JPanel panel; 
	private JMenuBar menuBar;
	private JMenu menuUser,menuFile,menuSelf,menuArc;
	private JMenuItem menuItem_modUser,menuItem_delUser,menuItem_addUser,
					  menuItem_listDoc,menuItem_upDoc,menuItem_downDoc,
					  menuItem_querySelf,menuItem_modSelf,menuItem_upArc,
					  menuItem_downArc,menuItem_listArc,menuItem_modArc,
					  menuItem_delArc,menu_queryArc;
	
	private UserFrame userframe=null;
	private SelfFrame selfframe=null;
	private FileFrame fileframe=null;
	private ArcFrame arcframe=null;
	
	public MainFrame(){
				
		initFrame();
		menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		menuUser = new JMenu("用户管理");
		menuBar.add(menuUser);
		
		menuItem_modUser = new JMenuItem("修改用户");
		menuItem_modUser.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				menuItem_modUserActionPerformed(e);
			}
		});	
		menuUser.add(menuItem_modUser);
		
		menuItem_delUser = new JMenuItem("删除用户");
		menuItem_delUser.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				menuItem_delUserActionPerformed(e);
			}
		});
		menuUser.add(menuItem_delUser);
		
		menuItem_addUser = new JMenuItem("新增用户");
		menuItem_addUser.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				menuItem_addUserActionPerformed(e);
			}
		});
		menuUser.add(menuItem_addUser);
		
		menuFile = new JMenu("档案管理");
		menuBar.add(menuFile);
		
		menuItem_upDoc = new JMenuItem("档案上传");
		menuItem_upDoc.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				menuItem_upDocActionPerformed(e);
			}
		});
		menuFile.add(menuItem_upDoc);	
		
		menuItem_downDoc = new JMenuItem("档案下载");
		menuItem_downDoc.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				menuItem_downDocActionPerformed(e);
			}
		});
		menuFile.add(menuItem_downDoc);
		
		menuArc = new JMenu("案宗管理");
		menuBar.add(menuArc);
		
		menuItem_upArc = new JMenuItem("案宗上传");
		menuItem_upArc.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				menuItem_upArcActionPerformed(e);
			}
		});
		menuArc.add(menuItem_upArc);
		
		menuItem_downArc = new JMenuItem("案宗下载");
		menuItem_downArc.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				menuItem_downArcActionPerformed(e);
			}
		});
		menuArc.add(menuItem_downArc);
		
		/*menuItem_listArc = new JMenuItem("列出所有案宗");
		menuItem_listArc.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				menuItem_listArcActionPerformed(e);
			}
		});
		menuArc.add(menuItem_listArc);*/
		
		menuItem_modArc=new JMenuItem("修改案宗基本信息");
		menuItem_modArc.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				menuItem_modeArcActionPerformed(e);
			}
		});
		menuArc.add(menuItem_modArc);
		
		menuItem_delArc=new JMenuItem("删除案宗");
		menuItem_delArc.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				menuItem_delArcActionPerformed(e);
			}
		});
		menuArc.add(menuItem_delArc);
		
		menu_queryArc=new JMenuItem("按标题查找案宗");
		menu_queryArc.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				menuItem_queryArcActionPerformed(e);
			}
		});
		menuArc.add(menu_queryArc);
		
		menuSelf = new JMenu("个人信息管理");
		menuBar.add(menuSelf);
		
		menuItem_modSelf = new JMenuItem("信息修改");
		menuItem_modSelf.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				menuItem_modSelfActionPerformed(e);
			}
		});
		menuSelf.add(menuItem_modSelf);	
		
		setFrameByRole();
		
//		setVisible(true);
	}
	

	

	private void initFrame() {
		
		Toolkit toolkit = getToolkit();                    // 获得Toolkit对象
		Dimension dimension = toolkit.getScreenSize();     // 获得Dimension对象
		int screenHeight = dimension.height;               // 获得屏幕的高度
		int screenWidth = dimension.width;                 // 获得屏幕的宽度
		this.setSize(screenWidth/2, screenHeight/2);           // 获得窗体的高度
		
		this.setLocation(100,100); 
		
		setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
//		setResizable(false);
				
		panel = new JPanel();
		getContentPane().add(panel, BorderLayout.CENTER);
		panel.setLayout(null);
	}
	
	private void setFrameByRole() {
		if (currentUser instanceof Administrator) {
			setAdminFrame();
		} else if (currentUser instanceof Operator) {
			setOperatorFrame();
		} else {
			setBrowserFrame();
		}
	}
	
	public void setAdminFrame(){
		setTitle("系统管理员界面");	
		menuItem_upDoc.setEnabled(false);
		menuItem_upArc.setEnabled(false);
	}
	
	public void setOperatorFrame(){
		setTitle("档案录入员界面");
		menuUser.setEnabled(false);	
		
	}
	
	public void setBrowserFrame(){
		setTitle("档案浏览员界面");
		menuUser.setEnabled(false);
		menuItem_upDoc.setEnabled(false);
		menuItem_upArc.setEnabled(false);
		menuItem_delArc.setEnabled(false);
		menuItem_modArc.setEnabled(false);
	}
	
	public static void launch() {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new MainFrame().setVisible(true);
			}
		});
	}
	
	private void menuItem_modUserActionPerformed(ActionEvent e){
		if (userframe==null){
			userframe= new UserFrame();
		}
		userframe.setTabSeq(1);
		userframe.setVisible(true);

	}
	
	private void menuItem_delUserActionPerformed(ActionEvent e){
		if (userframe==null){
			userframe= new UserFrame();
		}			
		userframe.setTabSeq(2);
		userframe.setVisible(true);		
	}
	
	private void menuItem_addUserActionPerformed(ActionEvent e){
		if (userframe==null){
			userframe= new UserFrame();
		}			
		userframe.setTabSeq(0);
		userframe.setVisible(true);	
	}
	
	private void menuItem_upDocActionPerformed(ActionEvent e){
		if (fileframe==null){
			fileframe= new FileFrame();
		}
		fileframe.setTabSeq(1);
		fileframe.setVisible(true);	
	}
	
	private void menuItem_downDocActionPerformed(ActionEvent e){
		if (fileframe==null){
			fileframe= new FileFrame();
		}
		fileframe.setTabSeq(0);
		fileframe.setVisible(true);
	}
	
	private void menuItem_upArcActionPerformed(ActionEvent e) {
		if (arcframe==null){
			arcframe= new ArcFrame();
		}
		arcframe.setTabSeq(1);
		arcframe.setVisible(true);	
	}
	
	private void menuItem_downArcActionPerformed(ActionEvent e) {
		if (arcframe==null){
			arcframe= new ArcFrame();
		}
		arcframe.setTabSeq(0);
		arcframe.setVisible(true);	
	}
	private void menuItem_queryArcActionPerformed(ActionEvent e) {
		if (arcframe==null){
			arcframe= new ArcFrame();
		}
		arcframe.setTabSeq(4);
		arcframe.setVisible(true);		
	}

	private void menuItem_delArcActionPerformed(ActionEvent e) {
		if (arcframe==null){
			arcframe= new ArcFrame();
		}
		arcframe.setTabSeq(3);
		arcframe.setVisible(true);			
	}

	private void menuItem_modeArcActionPerformed(ActionEvent e) {
		if (arcframe==null){
			arcframe= new ArcFrame();
		}
		arcframe.setTabSeq(2);
		arcframe.setVisible(true);
	}

	/*private void menuItem_listArcActionPerformed(ActionEvent e) {
		if (arcframe==null){
			arcframe= new ArcFrame();
		}
		arcframe.setTabSeq(2);
		arcframe.setVisible(true);
	}*/

	private void menuItem_modSelfActionPerformed(ActionEvent e){
		if (selfframe==null){
			selfframe= new SelfFrame();
		}		
		selfframe.setVisible(true);
	}
	
		
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}

